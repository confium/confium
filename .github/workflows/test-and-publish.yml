name: test-and-publish

on:
  push:
    branches: [ main ]
    tags: [ v* ]
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'
      - '.github/workflows/*.yml'
      - '!.github/workflows/test-and-publish.yml'
  pull_request:
    paths-ignore:
      - '/*.sh'
      - '/.*'
      - '/_*'
      - '**.adoc'
      - '**.md'
      - '**.nix'
      - 'flake.lock'

jobs:
  tests:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          submodules: recursive

      # install rust
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
      # cargo build
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
      - name: install cmake
        uses: lukka/get-cmake@latest
      - name: install boost
        id: install-boost
        uses: MarkusJx/install-boost@v2.4.1
        with:
          boost_version: 1.81.0
      - name: ctest
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
        run: |
          mkdir build
          cd build
          cmake -DBUILD_TESTING=yes -DBUILD_C_BINDINGS=yes  ..
          cmake --build .
          ctest -C Debug -V

  publish:
    if: contains(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      # install rust
      - name: install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
      # cargo publish
      - name: cargo publish
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          ignore-unpublished-changes: true
#          dry-run: true
