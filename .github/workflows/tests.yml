name: tests

on:
  push:
    branches:
      - master
      - wip

jobs:
  tests:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            env:
              CFM_HASH_BOTAN_PLUGIN_PATH: plugins/hash-botan/build/libcfm-hash-botan.so
          - os: macos-10.15
            env:
              CFM_HASH_BOTAN_PLUGIN_PATH: plugins/hash-botan/build/libcfm-hash-botan.dylib
          - os: windows-2019
            cmake_opts: -G "MSYS Makefiles"
            env:
              CFM_HASH_BOTAN_PLUGIN_PATH:
            
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      # install rust
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      # cargo build
      - uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: build
      # cargo tests
      - uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test

      # install ruby
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0

      # install os-specific build deps
      - if: runner.os == 'Linux'
        run: |
          sudo apt -y install libbotan-2-dev cmake make g++
      - if: runner.os == 'macOS'
        run: |
          brew install botan
      - if: runner.os == 'Windows'
        shell: bash
        run: |
          set -eux
          pacman --noconfirm -S --needed mingw64/mingw-w64-x86_64-libbotan

      # prepare to build
      - run: |
          gem install ffi rspec
          mkdir plugins/hash-botan/build

      # build plugin
      - run: |
          cd plugins/hash-botan/build
          cmake ${{ matrix.cmake_opts }} ..
          make

      # ruby tests
      - env: ${{ matrix.env }}
        shell: bash
        run: |
          export LD_LIBRARY_PATH=$PWD/target/debug
          if [[ "$OSTYPE" == *msys* ]]; then
            export RUBY_DLL_PATH="$(cygpath -w $PWD/target/debug)"
            export CFM_HASH_BOTAN_PLUGIN_PATH="$(cygpath -w $PWD/plugins/hash-botan/build/libcfm-hash-botan.dll)"
          fi
          rspec spec/

